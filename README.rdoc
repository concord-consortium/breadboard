= SPARKS
=== Copyright: (c)2013 Concord Consortium

See license.md for license information.

== Testing SPARKS locally

The SPARKS project contains all the built code needed to run the project locally. However, because the application uses XHR requests to load the application files, most browsers will require a local server, such as Apache or Python's SimpleHTTPServer, to be serving the site.

In order to load the example activities in the /examples folder, the local server needs to simply serve the SPARKS directory.

The easiest way to do this is using python:

    cd breadboard
    python -m SimpleHTTPServer

The server runs on port 8000 by default. Open a browser and navigate to

http://localhost:8000/examples/

== Modifying and building the library

Breadboard uses [Browserify](http://browserify.org/) to build the script and create the sparks.js file.

Browserify requires [npm](https://github.com/npm/npm).

    npm install -g browserify

After any change to the script files in app, run this command

    browserify app/init.js --standalone sparks > sparks.js

Your changes should be built into sparks.js

We will soon add an automatic build process using Watchify or Guard.

== Understanding the code

The majority of the application can be found in app/. The application is written in an MVC pattern, and the folders follow suit, except for the circuit components, whose model objects can all be found in /app/circuit.

The models generally define object classes. Most objects (pages, sections, etc) are instances of these classes.

The views generally return a jQuery object representing the view of the particular model object. The parent view is generally responsible for embedding the jQuery object onto the page.

Demo activity JSON files can be found in the /activities folder.

The circuit calculations are performed by the Circuit Solver library (https://github.com/concord-consortium/circuit-solver)

